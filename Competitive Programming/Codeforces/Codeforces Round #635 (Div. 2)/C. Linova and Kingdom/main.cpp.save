#include <bits/stdc++.h>

using namespace std;

#define f first
#define s second
#define mp make_pair
#define pb push_back
#define ll long long

ifstream fin("");
ofstream fout("");

const int nmax = 200100;

int nr[nmax];
int ind[nmax];
vector <int> v[nmax];
int d[nmax];
int used[nmax];

ll ans = 0;

int df(int x)
{
   int curr = 0;
   used[x] = 1;
   for(auto it:v[x])
        if(!used[it])
            curr+=df(it);
   nr[x] = curr;
   return curr+1;
}

bool cmp(pair<int, pair<int,int> > a, pair<int, pair<int,int> > b)
{
    return a.s.f-a.s.s >
}

void compute(int x, int curr)
{
    d[x]=1;
    if(ind[x]==0)
        ++curr;
    else
        ans = 1LL*ans + 1LL* curr;
    for(auto it:v[x])
        if(!d[it])
            compute(it, curr);
}

int main()
{
	cin.sync_with_stdio(false);
	cout.sync_with_stdio(false);
	fin.sync_with_stdio(false);
	fout.sync_with_stdio(false);

	int n,k;
	cin>>n>>k;

	for(int i=1; i<n; ++i)
    {
        int a,b;
        cin>>a>>b;
        v[a].pb(b);
        v[b].pb(a);
    }

    queue <int> q;
    d[1] = 1;

    q.push(1);
    while(!q.empty())
    {
        int x = q.front();
        q.pop();
        for(auto it:v[x])
        {
            if(d[it]==0)
                q.push(it),d[it]=d[x]+1;
        }
    }
    int a = df(1);

    vector <pair <int, pair<int,int> > > w;

    for(int i=1; i<=n; ++i)
    {
        w.pb(mp(i,mp(d[i],nr[i])));
    }

    sort(w.begin(), w.end(), cmp);

    for(int i=0; i<k; ++i)
        ind[w[i].f]=1;
    memset(d, 0, sizeof(d));
    compute(1, 0);
    cout<<ans;
}
