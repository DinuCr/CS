     ACM.8. (Subsiruri distincte din siruri de biti) Fie n (4ónó13) un numar 
natural.
Orice sir de 2^n+n-1 biti contine 2n subsiruri de cƒte n biti. De exemplu, un 
sir de 36 biti (n=5) 10110011... contine subsirurile de cƒte 5 biti 10110, 
01100, 11001, 10011,..s.a.m.d.
Sa se scrie un program care citeste un numar n si tipareste cel mai mic sir de 
2n+n-1 biti cu proprietatea ca toate subsirurile sale de cƒte n biti sunt 
distincte. Cel mai mic Œnseamna cea mai mica valoare numerica a secventei 
interpretate ca un numar binar.
Tiparirea rezultatului se face scriind cƒte 32 caractere binare pe o linie.
Tipariti de asemenea si valorile Œntregi (transformate Œn zecimal) ale tuturor 
subsirurilor. Se vor scrie cƒte opt numere pe o linie, Œn aceeasi ordine 
dreapta-stƒnga Œn care apar ele Œn sirul de biti. 
Exemple:
Fisier de intrare:
6
Fisier de iesire:
Cel mai mic sir de 69 biti cu proprietatea ceruta este:
00000010000110001010001110010010
11001101001111010101110110111111
00000.
Valorile corespunzatoare ale subsirurilor sunt:
 0     1     2     4     8    16    33     3
 6    12    24    49    34     5    10    20
40    17    35     7    14    28    57    50
36     9    18    37    11    22    44    25
51    38    13    26    52    41    19    39
15    30    61    58    53    42    21    43
23    46    29    59    54    45    27    55
47    31    63    62    60    56    48    32
=============================================================
Solutie:
Program acm8; {SUBSIRURI DISTINCTE DE BITI}
uses crt;
var fi,fo:text; nume_fi,nume_fo:string;   {Fisiere de intrare/iesire}
    v:array[0..16383] of word;
    e:array[0..16383] of boolean;
    n:byte;
    m,cr:word;
-----------------------------------------------------------
procedure err(a:string);              {Tratarea erorilor}
begin
   sound(400);delay(200);nosound;
   writeln(a);writeln('Apasati o tasta');
   repeat until keypressed;clrscr;halt
end;
-----------------------------------------------------------
procedure construieste;
{Construirea succesiunii de valori zecimale prin metoda backtracking}
var x,i:word;
begin 
   for i:=0 to m do begin e[i]:=false;v[i]:=0 end;
   v[0]:=0;e[0]:=true;
   for i:=1 to n do
     begin
        e[1 shl (i-1)]:=true; v[i]:=1 shl (i-1)
     end;
   cr:=n+1;
   while cr<=m do
     begin
       x:=v[cr-1]*2 mod (m+1);
       if e[x] then
         if e[x+1] then
           begin
             repeat
                dec(cr); e[v[cr]]:=false;
             until (v[cr] mod 2=0)and not e[v[cr]+1];
             v[cr]:=v[cr]+1; e[v[cr]]:=true
          end
                   else begin v[cr]:=x+1;e[x+1]:=true end
               else 
          begin v[cr]:=x; e[x]:=true end;
        inc(cr)
     end
 end;
---------------------------------------------------
procedure scrie;          {Scrie rezulatul in formatul cerut}
var i,j:word;
begin
   writeln(fo,'Cel mai mic subsir de ',m+n,' biti cu proprietatea    
              ceruta este:');
   for i:=1 to n-1 do write(fo,'0');
   for i:=0 to m do
      begin
        if (i+n-1) mod 32=0 then writeln(fo);
        write(fo,v[i] mod 2)
      end;
  writeln(fo,'.');
  writeln(fo,'Valorile corespunzatoare ale subsirurilor sunt:');
  for i:=0 to m div 8-1 do
     begin 
        for j:=0 to 7 do write(fo,v[8*i+j]:5);
        writeln(fo)
     end;
  for i:=m div 8*8 to m do write(fo,v[i]:5);
  writeln(fo)
end;
--------------------------------------------------
begin                               {PROGRAM PRINCIPAL}
  write('Fisierul de intrare(CR pentru fisierul implicit):');
  readln(nume_fi);assign(fi,nume_fi);{$I-} reset(fi) {$I+};
  if ioresult<>0 then err('Nu exista fisierul de date');
  write('Fisierul de iesire (CR pentru fisierul implicit):');
  readln(nume_fo);assign(fo,nume_fo);rewrite(fo);
  if nume_fi='' then write('Dati numarul:');
  {$I-}readln(fi,n){$I+};
  if ioresult<>0 then err('Fisier vid sau format numeric incorect');
  if (n<4)or(n>14) then err('Valoare incorecta');
  close(fi);m:=1 shl n -1;
  construieste;scrie;close(fo);
  writeln('Gata');readln
end.

     O alta solutie a acestei probleme este:

program acm8bis;
uses crt;
var a,b,c:array[0..17000] of byte;
    m,n,i,j,k:integer;
-------------------------------------------------------
function ver(p:integer):boolean;
var x,i:integer;
begin
  x:=a[p];
  for i:=1 to n-1 do x:=x*2+a[p+i];
  if b[x]=0 then ver:=true else ver:=false;
end;
---------------------------------------------------------
procedure pune(p:integer);
var x,i:integer;
begin
  x:=a[p];
  for i:=1 to n-1 do x:=x*2+a[p+i];
  b[x]:=1;
end;
----------------------------------------------------------
procedure afis(p:integer);
var x,i:integer;
begin
  x:=a[p];
  for i:=1 to n-1 do x:=x*2+a[p+i];
  b[x]:=1;
  write(x:5);
end;
----------------------------------------------------------
procedure scoate(p:integer);
var x,i:integer;
begin
  x:=a[p];
  for i:=1 to n-1 do x:=x*2+a[p+i];
  b[x]:=0;
end;
----------------------------------------------------------
begin   {program principal}
  clrscr;
  writeln;
  write('n=');readln(n);
  for i:=1 to 17000 do begin a[i]:=0;b[i]:=0;c[i]:=0 end;
  m:=1;
  for i:=1 to n do m:=m*2;
  m:=m+n-1; i:=n+1; b[0]:=1;
  while i<=m do
    begin
      if i mod 15 =0 then
         begin
           gotoxy(10,10); write('          ');
           gotoxy(10,10); write(i);
         end;
      if a[i]=0 then
         if c[i]=0 then
            if ver(i-n+1) then
               begin pune(i-n+1);c[i]:=1;inc(i); end
                          else a[i]:=1
                   else
                     begin scoate(i-n+1);c[i]:=0;a[i]:=1; end
                else
                  if c[i]=0 then
                     if ver(i-n+1)then
                       begin pune(i-n+1);c[i]:=1;inc(i); end
                                  else
                       begin a[i]:=0;dec(i); end
                            else
                       begin scoate(i-n+1);c[i]:=0;a[i]:=0;dec(i); end;
    end;
  if i>m then
     begin
       for i:=1 to m do
          begin
             write(a[i]);
             if i mod 32 =0 then writeln;
          end;
       writeln;
       for i:=n to m do
          begin
             afis(i-n+1);
             if (i-n+1) mod 8 =0 then writeln;
          end;
       writeln;
     end;
end.
