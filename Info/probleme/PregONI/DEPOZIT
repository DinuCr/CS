	Concurs ACM Zona Pacificul de Sud

Problema D (Depot Placement)

Sunteti angajat la o companie care asigura servicii de transport marfuri en 
gross. Clientii au magazine in orase din toata tara si ei sunt aprovizionati 
din depozite locale ale companiei. Pentru o aprovizionare optima, compania vrea
sa investeasca in construirea unui depozit central din care sa se aprovizioneze
toate zonele; va fi deci necesar ca acest depozit sa fie plasat intr-unul din
orase in asa fel incat timpul total de livrare din acest depozit in toate 
orasele sa fie minim. Camioanele companiei transporta marfa la depozitele 
locale si se intorc la depozitul central. Timpul de livrare este format din 
timpul necesar parcurgerii drumului de la depozitul central la oras si inapoi 
(se presupune ca soferul va urma de fiecare data calea cea mai rapida, iar in 
fiecare oras depozitul local este chiar la intrare) si timpul de descarcare al
camionului la destinatie, care este de exact 30 minute. Drumurile care leaga 
orasele sunt de aceeasi calitate, dar pot exista drumuri care iau mai mult timp 
intr-un sens decat in sens invers. Pot fi de exemplu drumuri cu sens unic. 
Pentru a simplifica modelul, s-a stabilit pentru fiecare oras o lista cu toate 
drumurile care pleaca din oras spre celelalte orase si cat timp ia parcurgera 
fiecarui drum.

Intrare:
	Datele sunt intr-un fisier text al carui nume se citeste la tastatura,
si contine date pentru mai multe situatii. Fiecare situatie incepe cu o linie 
pe care se afla un numar intreg n (2<=n<=50) care reprezinta numarul de orase. 
Urmeaza n linii pentru cele n orase. Pe fiecare linie se afla intai numarul p 
de drumuri care pleaca din oras, urmat de p perechi de numere care contin 
numarul orasului de destinatie al drumului respectiv timpul necesar pentru 
parcurgerea lui (in minute). Orasele sunt numerotate cu numere de la 1 la n.
Numarul de minute pentru a parcurge orice segment de drum este in intervalul
[10,120]. Orice doua orase sunt legate direct prin cel mult un drum si din 
orice oras pleaca cel putin un drum.
Fisierul de intrare se termina cu o situatie descrisa de 0 orase.

Iesire:
Pentru fiecare situatie trebuie scoasa pe ecran o linie continand numarul 
orasului de la care livrarea totala este optima si ce timp de livrare ii 
corespunde.
Daca sunt mai multe orase in care este atins minimul, ele trebuesc listate in
ordinea crescatoare a numerelor, cu timpul de livrare la sfarsit.
Toate numerele se separa prin cate un spatiu.

Exemplu:
Intrare:
5
2 2 70 4 55
3 1 70 3 30 5 65
3 2 30 5 40 4 35
3 1 55 3 35 5 50
3 2 65 3 40 4 50
2
1 2 35
1 1 25
0
Iesire:
3 540
1 2 120
=================================
Solutia 1 (Catalin Francu)
program Depozit;
{$B-,I-,R-,S-}
const NMax=50;
      Infinite=10000;
type IntegerMatrix=array[1..NMax,1..NMax] of Integer;
var A:IntegerMatrix;
    N,BestTime:Integer;
    FileName:String;

procedure ReadData;
var i,j,k,P:Integer;
begin
  ReadLn(N);
  for i:=1 to N do
    for j:=1 to N do
      A[i,j]:=Infinite;
  for i:=1 to N do
    begin
      Read(P);
      for j:=1 to P do Read(k,A[i,k]);
      ReadLn;
    end;
end;

procedure Floyd;
var i,j,k:Integer;
begin
  for k:=1 to N do
    for i:=1 to N do
      for j:=1 to N do
        if A[i,k]+A[k,j]<A[i,j]
          then A[i,j]:=A[i,k]+A[k,j];
end;

procedure FindBest;
var i,j,S:Integer;
begin
  BestTime:=MaxInt;
  for i:=1 to N do
    begin
      S:=0;
      for j:=1 to N do
        if i<>j then Inc(S,A[i,j]+A[j,i]+30);
      Inc(S,30);
      if S<BestTime then BestTime:=S;
    end;
end;

procedure WriteBest;
var i,j,S:Integer;
begin
  for i:=1 to N do
    begin
      S:=0;
      for j:=1 to N do
        if i<>j then Inc(S,A[i,j]+A[j,i]+30);
      Inc(S,30);
      if S=BestTime then Write(i,' ');
    end;
  WriteLn(BestTime);
end;

begin
  Write('Numele fisierului de intrare: ');ReadLn(FileName);
  Assign(Input,FileName);Reset(Input);
  repeat
    ReadData;
    Floyd;
    FindBest;
    if N>0 then WriteBest;
  until N=0;
  Close(Input);
end.
--------------------------------------
Solutia 2 (Ovifiu ghiorghioiu)
const nmax=50;
      inf=10000;

var a:array[1..nmax,1..nmax] of integer;
    i,j,k,n,nr,c:integer;
    cc:array[1..nmax] of integer;
    f:text;
    s:string;

begin
     write('Numele fis. de intrare: ');readln(s);
     assign(f,s);reset(f);
     while true do begin
           readln(f,n);
           if n=0 then break;
           fillchar(a,sizeof(a),0);
           for i:=1 to n-1 do
               for j:=i+1 to n do begin
                   a[i,j]:=inf;
                   a[j,i]:=inf
               end;
           for i:=1 to n do begin
               read(f,nr);
               for k:=1 to nr do begin
                   read(f,j,c);
                   a[i,j]:=c
               end;
               readln(f)
           end;
           for k:=1 to n do
               for i:=1 to n do
                   for j:=1 to n do
                          if (a[i,j]>a[i,k]+a[k,j]) then
                          a[i,j]:=a[i,k]+a[k,j];
           k:=maxint;
           for i:=1 to n do begin
               c:=0;
               for j:=1 to n do inc(c,a[i,j]+a[j,i]);
               cc[i]:=c;
               if c<k then
                  k:=c;
           end;
           for i:=1 to n do
               if cc[i]=k then write(i,' ');
           writeln(k+n*30);
     end;
end.
----------------------------------------
