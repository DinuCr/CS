  J.53. Se considera k siruri S1,s2,..,Sk de numere Œntregi, fiecare sir
avƒnd n elemente ordonate crescator.
   a) Sa se scrie un program care determina numarul maxim de siruri (din
cele date) care au macar un element Œn comun.
   b) Sa se determine j maxim pentru care exista x[i1]óx[i2]ó..óx[ij]asa Œncƒt:
             i) x[iq] apare Œn sirul S[iq],
             ii) 1ói1<i2<..<ijók.
Afisarea rezultatelor se va face pe ecran. Numele fisierelor de intrare si de
iesire vor fi citite de la terminal. Structura fisierului de intrare este:
k n
S11 S12 ... S1n
........................
Sk1 Sk2 ... Skn
Structura fisierului de iesire pentru (b) este:
j
i1 i2 ... ij
xi1 xi2 ... xij
======================================  (Iasi 1995)
Solutie (Mihai Stroe)

    Punctul a) al problemei este simplu:se cauta in matrice pozitiile din
  siruri distincte pe care apare acelasi element.
    La punctul b) se aplica metoda programarii dinamice.Problema este
  asemanatoare cu gasirea subsirului crescator de lungime maxima;diferenta
  consta in faptul ca trebuie ezolvata pe matrice.
    Subsirul crescator de lungime maxima pina la pozitia (i,j) este 1, daca
  nu exista elemente mai mici sau egale cu elementul din pozitia (i,j) pe
  linii anterioare liniei i, altfel fiind max(subsir[ii,jj]),unde ii<i si in
  pozitia (ii,jj) este un element mai mic sau egal cu cel din pozitia (i,j).

}



var a:array[1..100,1..100]of integer;
    b,x,y:array[1..100,1..100]of byte;
    c:array[1..100,1..2]of byte;
    mx,my,ii,jj,max,i,j,k,l,m,n:word;
    fi,fo:text;
    s:string;

procedure rec(i,j:byte);
begin
  if i+j=0 then exit;
  rec(x[i,j],y[i,j]);
  write(fo,i,' ');
end;

procedure rec2(i,j:byte);
begin
  if i+j=0 then exit;
  rec2(x[i,j],y[i,j]);
  write(fo,a[i,j],' ');
end;

begin
  write('Introduceti numele fisierului de intrare ');
  readln(s);
  assign(fi,s);
  write('Introduceti numele fisierului de iesire ');
  readln(s);
  assign(fo,s);
  reset(fi);
  rewrite(fo);
  readln(fi,k,n);
  for i:=1 to k do
      begin
        for j:=1 to n do
            read(fi,a[i,j]);
        readln(fi);
      end;
  for i:=1 to k do
      for j:=1 to n do
          if b[i,j]=0 then
          begin
            m:=0;
            for ii:=i to k do
                for jj:=1 to n do
                    if a[ii,jj]=a[i,j] then begin inc(m);b[i,j]:=1;break;end;
            if m>max then begin max:=m;mx:=i;my:=j;end;
          end;
  fillchar(b,sizeof(b),0);
  writeln(fo,'Numarul ',a[mx,my],' e gasit in ',max,' siruri .');
  write(fo,'Acestea sunt: ');
  for i:=1 to k do
      for j:=1 to n do
          if a[i,j]=a[mx,my]then begin write(fo,i,' ');break;end;
  writeln(fo);
  for i:=1 to n do b[1,i]:=1;
  for i:=1 to k do
      for j:=1 to n do
          begin
            b[i,j]:=1;
            for ii:=1 to i-1 do
                for jj:=1 to n do
                    if (a[ii,jj]<=a[i,j])and(b[ii,jj]>=b[i,j])then
                       begin
                         b[i,j]:=b[ii,jj]+1;
                         x[i,j]:=ii;
                         y[i,j]:=jj;
                         break;
                       end;
          end;
  m:=0;
  for i:=1 to k do
      for j:=1 to n do
          if b[i,j]>m then
             begin
               m:=b[i,j];
               ii:=i;
               jj:=j;
             end;
  rec(ii,jj);
  writeln(fo);
  rec2(ii,jj);
  close(fi);
  close(fo);
end.